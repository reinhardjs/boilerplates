---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-keycloak
spec:
  replicas: 1
  revisionHistoryLimit: 0  # Set to 0 to keep no old ReplicaSets
  selector:
    matchLabels:
      app: my-keycloak
  template:
    metadata:
      labels:
        app: my-keycloak
    spec:
      nodeSelector:
        kubernetes.io/hostname: worker-node
      containers:
        - name: my-keycloak
          image: quay.io/keycloak/keycloak:25.0.6
          args: ["start"]
          env:
            - name: KC_HEALTH_ENABLED
              value: "true"
            - name: KC_METRICS_ENABLED
              value: "true"
            - name: KC_DB
              value: "postgres"
            - name: KC_DB_URL
              value: "jdbc:postgresql://keycloak-postgres:5432/keycloak"
            - name: KC_DB_USERNAME
              value: "keycloak"
            - name: KC_DB_PASSWORD
              value: "password"
            - name: KC_HOSTNAME
              value: "keycloak.reinhardjs.my.id"
            - name: KEYCLOAK_ADMIN
              value: "admin"
            - name: KEYCLOAK_ADMIN_PASSWORD
              value: "password"
            - name: KC_PROXY
              value: "edge"
            - name: KC_LOG_LEVEL
              value: "DEBUG" # Changed log level to debug for detailed logs
            - name: KC_HTTP_PORT
              value: "8080"
            - name: KC_HTTPS_PORT
              value: "8443"
            - name: KC_CACHE
              value: "local"
            - name: KC_FEATURES
              value: "preview,docker"
            - name: KC_TRANSACTION_XA_ENABLED
              value: "false"
            - name: KC_SPI_HOSTNAME_DEFAULT
              value: "keycloak.reinhardjs.my.id"
          ports:
            - containerPort: 8080
              name: http
            - containerPort: 8443
              name: https

---
apiVersion: v1
kind: Service
metadata:
  name: my-keycloak
  namespace: default
spec:
  selector:
    app: my-keycloak
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
      name: http
    - protocol: TCP
      port: 8443
      targetPort: 8443
      name: https
  type: NodePort

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-keycloak-ingress
  namespace: default
  annotations:
    traefik.ingress.kubernetes.io/ssl-cert: "reinhardjs-my-id-tls-secret" # Reference the secret
    traefik.ingress.kubernetes.io/ssl-redirect: "true" # Enforce HTTPS
spec:
  rules:
  - host: keycloak.reinhardjs.my.id
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: my-keycloak
            port:
              number: 8080
  tls:
  - hosts:
    - keycloak.reinhardjs.my.id
    secretName: reinhardjs-my-id-tls-secret
