apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-web
  namespace: default  # Adjust namespace if needed
spec:
  replicas: 1  # Adjust number of replicas as needed
  selector:
    matchLabels:
      app: my-web
  template:
    metadata:
      labels:
        app: my-web
    spec:
      nodeSelector:
        kubernetes.io/hostname: master-node  # Specify your node name here
      containers:
      - name: my-web
        image: localhost:5000/my-web:latest  # Replace with your Docker image tag (e.g., my-web:v1.0)
        imagePullPolicy: Never  # Tell Kubernetes to use the local image
        ports:
        - containerPort: 3000  # Port where your app listens in the container

---
apiVersion: v1
kind: Service
metadata:
  name: my-web
  namespace: default  # Adjust namespace if needed
spec:
  selector:
    app: my-web  # This should match the label on the Deployment pod
  ports:
    - protocol: TCP
      port: 3000  # The port the service exposes to other services or the ingress
      targetPort: 3000  # The port where the app listens inside the container
  type: NodePort  # Exposes service only within the cluster (adjust if you need LoadBalancer or NodePort)

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-web-ingress
  namespace: default
  annotations:
    traefik.ingress.kubernetes.io/ssl-cert: "reinhardjs-my-id-tls-secret" # Reference the secret
    traefik.ingress.kubernetes.io/ssl-redirect: "true" # Enforce HTTPS
spec:
  rules:
  - host: reinhardjs.my.id
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: my-web
            port:
              number: 3000
  tls:
  - hosts:
    - reinhardjs.my.id
    secretName: reinhardjs-my-id-tls-secret
