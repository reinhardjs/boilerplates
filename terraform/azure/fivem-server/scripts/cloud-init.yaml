#cloud-config
package_update: true
package_upgrade: true

packages:
  - curl
  - wget
  - unzip
  - cifs-utils
  - git
  - htop
  - screen
  - nano
  - net-tools

# Create necessary directories
runcmd:
  - mkdir -p /mnt/fivem-server
  - mkdir -p /mnt/fivem-resources
  - mkdir -p /mnt/fivem-cache
  
  # Mount Azure File Shares
  - echo "//${storage_account_name}.file.core.windows.net/fivem-server /mnt/fivem-server cifs username=${storage_account_name},password=${storage_account_key},uid=1000,gid=1000,iocharset=utf8,dir_mode=0755,file_mode=0755 0 0" >> /etc/fstab
  - echo "//${storage_account_name}.file.core.windows.net/fivem-resources /mnt/fivem-resources cifs username=${storage_account_name},password=${storage_account_key},uid=1000,gid=1000,iocharset=utf8,dir_mode=0755,file_mode=0755 0 0" >> /etc/fstab
  - echo "//${storage_account_name}.file.core.windows.net/fivem-cache /mnt/fivem-cache cifs username=${storage_account_name},password=${storage_account_key},uid=1000,gid=1000,iocharset=utf8,dir_mode=0755,file_mode=0755 0 0" >> /etc/fstab
  
  # Mount all file systems
  - mount -a
  
  # Change ownership of mounted directories
  - chown -R ${admin_username}:${admin_username} /mnt/fivem-server
  - chown -R ${admin_username}:${admin_username} /mnt/fivem-resources
  - chown -R ${admin_username}:${admin_username} /mnt/fivem-cache

  # Download and extract FiveM server to local directory (supports symlinks)
  - mkdir -p /opt/fivem
  - cd /opt/fivem
  - wget -O fx.tar.xz "${fivem_download_url}"
  - tar -xf fx.tar.xz
  - rm fx.tar.xz
  - chown -R ${admin_username}:${admin_username} /opt/fivem

  # Create symlinks so txData will point to Azure Storage
  - mkdir -p /mnt/fivem-server/txData/qbox_core
  - mkdir -p /mnt/fivem-resources/qbox_core
  - mkdir -p /mnt/fivem-cache/qbox_core
  
  # Create symlinks from FiveM directory to mounted storage
  - ln -sf /mnt/fivem-cache/qbox_core /opt/fivem/txData/qbox_core/cache
  - ln -sf /mnt/fivem-resources/qbox_core /opt/fivem/txData/qbox_core/resources
  - chown -R ${admin_username}:${admin_username} /opt/fivem/txData
  
  # Create run script that leverages FiveM's original run.sh
  - |
    cat > /home/${admin_username}/start-fivem.sh << 'EOF'
    #!/bin/bash
    echo "Starting FiveM server..."
    cd /opt/fivem
    
    # Create txData directory structure if it doesn't exist
    mkdir -p txData/qbox_core
    
    # Ensure symlinks exist for persistent storage
    if [ ! -L "txData/qbox_core/cache" ]; then
        ln -sf /mnt/fivem-cache/qbox_core txData/qbox_core/cache
    fi
    if [ ! -L "txData/qbox_core/resources" ]; then
        ln -sf /mnt/fivem-resources/qbox_core txData/qbox_core/resources
    fi
    
    # Start FiveM using the original run.sh
    echo "Starting FiveM with run.sh at $(date)" | tee /mnt/fivem-server/fivem.log
    nohup ./run.sh > /mnt/fivem-server/fivem.log 2>&1 &
    echo $! > /mnt/fivem-server/fivem.pid
    
    if [ -f /mnt/fivem-server/fivem.pid ]; then
        echo "FiveM server started. PID: $(cat /mnt/fivem-server/fivem.pid)"
        echo "Logs: tail -f /mnt/fivem-server/fivem.log"
    else
        echo "Failed to start FiveM server. Check logs: tail -f /mnt/fivem-server/fivem.log"
    fi
    EOF

  # Create systemd service that uses our start script
  - |
    cat > /etc/systemd/system/fivem.service << 'EOF'
    [Unit]
    Description=FiveM Server
    After=network.target
    
    [Service]
    Type=forking
    User=${admin_username}
    WorkingDirectory=/home/${admin_username}
    ExecStart=/home/${admin_username}/start-fivem.sh
    ExecStop=/bin/bash -c 'if [ -f /mnt/fivem-server/fivem.pid ]; then kill $(cat /mnt/fivem-server/fivem.pid); rm -f /mnt/fivem-server/fivem.pid; fi'
    Restart=always
    RestartSec=10
    
    [Install]
    WantedBy=multi-user.target
    EOF
  
  # Create additional helper scripts
  - |
    cat > /home/${admin_username}/stop-fivem.sh << 'EOF'
    #!/bin/bash
    echo "Stopping FiveM server..."
    if [ -f /mnt/fivem-server/fivem.pid ]; then
        PID=$(cat /mnt/fivem-server/fivem.pid)
        kill $PID
        rm -f /mnt/fivem-server/fivem.pid
        echo "FiveM server stopped."
    else
        echo "No FiveM server PID found."
        sudo systemctl stop fivem
    fi
    EOF
    
  - |
    cat > /home/${admin_username}/restart-fivem.sh << 'EOF'
    #!/bin/bash
    echo "Restarting FiveM server..."
    ./stop-fivem.sh
    sleep 2
    ./start-fivem.sh
    EOF
  
  - |
    cat > /home/${admin_username}/logs-fivem.sh << 'EOF'
    #!/bin/bash
    echo "Showing FiveM server logs (press Ctrl+C to exit)..."
    tail -f /mnt/fivem-server/fivem.log
    EOF

  - |
    cat > /home/${admin_username}/status-fivem.sh << 'EOF'
    #!/bin/bash
    echo "=== FiveM Server Status ==="
    if [ -f /mnt/fivem-server/fivem.pid ]; then
        PID=$(cat /mnt/fivem-server/fivem.pid)
        if ps -p $PID > /dev/null; then
            echo "FiveM is RUNNING (PID: $PID)"
        else
            echo "FiveM is NOT RUNNING (stale PID file)"
        fi
    else
        echo "FiveM is NOT RUNNING (no PID file)"
    fi
    
    echo ""
    echo "=== System Status ==="
    sudo systemctl is-active fivem && echo "Systemd service: ACTIVE" || echo "Systemd service: INACTIVE"
    
    echo ""
    echo "=== Storage Mounts ==="
    df -h | grep fivem
    
    echo ""
    echo "=== txData Structure ==="
    ls -la /opt/fivem/txData/qbox_core/ 2>/dev/null || echo "txData not created yet"
    EOF
  
  # Make all scripts executable
  - chmod +x /home/${admin_username}/*.sh
  - chown ${admin_username}:${admin_username} /home/${admin_username}/*.sh
  
  # Reload systemd and enable service (but don't start yet - let user configure first)
  - systemctl daemon-reload
  - systemctl enable fivem
  
  # Create README with instructions
  - |
    cat > /home/${admin_username}/README.md << 'EOF'
    # FiveM Server Setup (Optimized Structure)
    
    Your FiveM server has been set up with the correct structure for txData persistence.
    
    ## File Structure
    ```
    Local VM (fast execution):
    /opt/fivem/
    ├── alpine/              # FiveM runtime
    ├── run.sh              # Original FiveM startup script
    └── txData/
        └── qbox_core/
            ├── cache/      -> /mnt/fivem-cache/qbox_core (symlink)
            └── resources/  -> /mnt/fivem-resources/qbox_core (symlink)
    
    Azure Storage (persistent):
    /mnt/fivem-server/       # Logs and general data
    /mnt/fivem-cache/        # Cache files (persisted)
    /mnt/fivem-resources/    # Resources and maps (persisted)
    ```
    
    ## How it Works
    1. FiveM binaries run from `/opt/fivem/` (local, fast)
    2. When FiveM creates `txData/qbox_core/cache` and `txData/qbox_core/resources`, 
       they actually point to Azure Storage via symlinks
    3. Your data persists even if VM is recreated
    
    ## Management Commands
    - `./start-fivem.sh` - Start FiveM server (uses original run.sh)
    - `./stop-fivem.sh` - Stop FiveM server
    - `./restart-fivem.sh` - Restart FiveM server
    - `./logs-fivem.sh` - View live logs
    - `./status-fivem.sh` - Check detailed status
    
    ## Systemd Service
    - Start: `sudo systemctl start fivem`
    - Stop: `sudo systemctl stop fivem`
    - Status: `sudo systemctl status fivem`
    - Enable auto-start: `sudo systemctl enable fivem` (already enabled)
    
    ## First Time Setup
    1. Start the server: `./start-fivem.sh`
    2. Check logs: `./logs-fivem.sh`
    3. Check status: `./status-fivem.sh`
    4. Connect via FiveM client to: <VM_IP>:30120
    
    ## Adding Resources
    - Upload resources to `/mnt/fivem-resources/qbox_core/`
    - They will appear in FiveM as `txData/qbox_core/resources/`
    - Restart server: `./restart-fivem.sh`
    
    ## Logs and Debugging
    - Server logs: `/mnt/fivem-server/fivem.log`
    - System service: `sudo journalctl -u fivem -f`
    
    ## Cost Optimization
    - VM automatically shuts down at 2 AM UTC (configurable)
    - All data persists on Azure Storage
    - Only binaries stored locally for performance
    EOF

write_files:
  - path: /etc/motd
    content: |
      
      ╔══════════════════════════════════════════════════════════════════╗
      ║                    FiveM Server VM (Optimized)                  ║
      ║                                                                  ║
      ║  Structure: alpine/ + run.sh locally, txData on Azure Storage   ║
      ║  FiveM:     /opt/fivem/ (local for performance)                 ║
      ║  Data:      /mnt/fivem-* (Azure Storage for persistence)        ║
      ║  Logs:      /mnt/fivem-server/fivem.log                         ║
      ║                                                                  ║
      ║  Quick Start:                                                    ║
      ║  - Start:   ./start-fivem.sh                                     ║
      ║  - Logs:    ./logs-fivem.sh                                      ║
      ║  - Status:  ./status-fivem.sh                                    ║
      ║  - Help:    cat README.md                                        ║
      ║                                                                  ║
      ╚══════════════════════════════════════════════════════════════════╝
      
    owner: root:root
    permissions: '0644'

final_message: "FiveM server setup completed! Use ./start-fivem.sh to start. Check README.md for details."
